!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
build_plot	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def build_plot(polygon_vers, title):$/;"	f	language:Python
create_rho_theta	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def create_rho_theta(hough_dict, img):$/;"	f	language:Python
detect_paralls	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def detect_paralls(hough_acc, image, peak_hieght_t):$/;"	f	language:Python
FILE_PATH	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^FILE_PATH = "Testing_Figures\/1.txt"$/;"	v	language:Python
fill_hs_acc	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def fill_hs_acc(hough_acc, points):$/;"	f	language:Python
find_intersection	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def find_intersection(line1, line2):$/;"	f	language:Python
find_peaks	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def find_peaks(hough_acc, img, peak_hieght_t):$/;"	f	language:Python
gen_expected_perimeters	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def gen_expected_perimeters(valid_peaks_pairs):$/;"	f	language:Python
gen_parallelograms_sides	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def gen_parallelograms_sides(peaks_list, hough_acc):$/;"	f	language:Python
gen_shape_dict	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def gen_shape_dict(shape):$/;"	f	language:Python
get_best_shape	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def get_best_shape(edge_points, poly_list):$/;"	f	language:Python
get_figure	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def get_figure(file_path):$/;"	f	language:Python
get_paired_peaks	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def get_paired_peaks(hough_acc, img):$/;"	f	language:Python
get_sides_parameters	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def get_sides_parameters(sides_list):$/;"	f	language:Python
get_vertices	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def get_vertices(parall_sides):$/;"	f	language:Python
hough_transform	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def hough_transform(img):$/;"	f	language:Python
LENGTH_T	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^LENGTH_T = 0.8$/;"	v	language:Python
MAX_DIV	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^MAX_DIV = 5$/;"	v	language:Python
MAX_PEAKS_PAIRS	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^MAX_PEAKS_PAIRS = float("inf")$/;"	v	language:Python
PEAK_DEC	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^PEAK_DEC = 0.1$/;"	v	language:Python
PERIMETER_T	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^PERIMETER_T = 0.1$/;"	v	language:Python
RHO_RES	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^RHO_RES = 1.0 \/ 4$/;"	v	language:Python
run_algorithm	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def run_algorithm(points):$/;"	f	language:Python
START_PEAK_HEIGHT_T	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^START_PEAK_HEIGHT_T = 1$/;"	v	language:Python
THETA_RES	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^THETA_RES = 1.0 \/ 2$/;"	v	language:Python
validate_perimeter	/home/egor/Google Drive/Programming/PROJECTS/ОПД/Parallelogram-Detection-Using-the-Hough-Transform/main.py	/^def validate_perimeter(valid_sides_pairs, actual_perimeter):$/;"	f	language:Python
